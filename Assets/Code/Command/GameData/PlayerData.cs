using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerData : AutoGeneratedSingleton<PlayerData>, IDisposable
{
    public float playerMaxBlood { get; private set; }
    public float playerMaxMagic { get; private set; }
    /// <summary>
    /// 0.0 ~ 1.0 当前血量
    /// </summary>
    public float playerBlood { get; private set; }
    /// <summary>
    /// 0.0 ~ 1.0 当前魔量
    /// </summary>
    public float playerMagic { get; private set; }
    /// <summary>
    /// 每秒钟回复血量
    /// </summary>
    public float playerReplyBlood { get; private set; }
    /// <summary>
    /// 每秒钟回复魔量
    /// </summary>
    public float playerReplyMagic { get; private set; }

    public float playerShootSpeed { get; private set; }

    public int playerSorce { get; private set; }

    public PlayerData()
    {
        this.playerMaxBlood = 1000.0f;
        this.playerMaxMagic = 1000.0f;
        this.playerBlood = this.playerMaxBlood;
        this.playerMagic = this.playerMaxMagic;

        this.playerReplyBlood = 1f;
        this.playerReplyMagic = 3f;

        this.playerShootSpeed = 2.6f;

        this.playerSorce = 0;
    }

    /// <summary>
    /// deltaTime 每一帧的时间
    /// </summary>
    /// <param name="deltaTime"></param>
    public void OnUpdate(float deltaTime)
    {
        if (this.playerBlood < this.playerMaxBlood) this.playerBlood += this.playerReplyBlood * deltaTime;
        if (this.playerMagic < this.playerMaxMagic) this.playerMagic += this.playerReplyMagic * deltaTime;
    }

    public void SetPlayerData(ReplyType type, float value)
    {
        switch (type)
        {
            case ReplyType.Blood:
                float vBlood = playerBlood + value;
                playerBlood = vBlood > this.playerMaxBlood ? this.playerMaxBlood : vBlood < 0.0f ? 0.0f : vBlood;
                if (playerBlood <= 0)
                {
                    PlayerController.Instance.Death();
                }
                break;
            case ReplyType.Magic:
                float vMagic = playerMagic + value;
                playerMagic = vMagic > this.playerMaxMagic ? this.playerMaxMagic : vMagic < 0.0f ? 0.0f : vMagic;
                break;
        }
    }

    public void Rebirth()
    {
        this.playerBlood = this.playerMaxBlood;
        this.playerMagic = this.playerMaxMagic;
    }

    public void SetScore(int value)
    {
        this.playerSorce += value;
    }

    public void Dispose()
    {

    }
}
